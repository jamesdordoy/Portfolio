#!/bin/bash

STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep ".php\{0,1\}$")

if [[ "$STAGED_FILES" = "" ]]; then
  exit 0
fi

PASS=true

echo "\nValidating PHPCS:\n"

# # Check for phpcs
which ./vendor/bin/phpcs &> /dev/null
if [[ "$?" == 1 ]]; then
  echo "\t\033[41mPlease install PHPCS\033[0m"
  exit 1
fi

RULESET=./phpcs.xml

for FILE in $STAGED_FILES
do
  ./vendor/bin/phpcs --runtime-set ignore_warnings_on_exit --standard="$RULESET" "$FILE"

  if [[ "$?" == 0 ]]; then
    echo "\t\033[32mPHPCS Passed: $FILE\033[0m"
  else
    echo "\t\033[41mPHPCS Failed: $FILE\033[0m"
    PASS=false
  fi
done

echo "\nPHPCS validation completed!\n"

if ! $PASS; then
  echo "\033[41mCOMMIT FAILED:\033[0m Your commit contains files that should pass PHPCS but do not. Please fix the PHPCS errors and try again.\n"
  exit 1
else
  echo "\033[42mCOMMIT SUCCEEDED\033[0m\n"
fi

# Run Prettier against staged files.

for file in $(git diff --cached --name-only | grep -E '\.(css|js|json|jsx|scss|vue)$')
do
  git show "$file" | node_modules/.bin/prettier --write "$file"
  if [ $? -ne 0 ]; then
    echo "Prettier failed on staged file: $file. Please check the file contents are correct."
    exit 1
  fi
  git add "$file"
done

# Run ESLint against staged files.

for file in $(git diff --cached --name-only | grep -E '\.(js|jsx|vue)$')
do
  git show "$file" | node_modules/.bin/eslint "$file"
  if [ $? -ne 0 ]; then
    echo "ESLint failed on staged file: $file. Please check the file contents conforms to the code standards."
    exit 1
  fi
done

exit $?